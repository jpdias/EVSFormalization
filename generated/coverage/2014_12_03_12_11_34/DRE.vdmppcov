class DRE
instance variables
	private Code: nat1 :=9999;
	private Memory: map Voter to Candidate;
	private log: seq of RTAL :=[];
	private logEntry: RTAL;
	private CurrentPBE: PBE;
	--inv Ballot;
operations
	public DRE: PBE ==> DRE
	DRE(pbe) == (CurrentPBE := pbe;
							logEntry := new RTAL("Election Started");
							log := log ^ [logEntry];
							return self)
	pre 
		pbe.ballot <> {}
		and pbe.voters <> {}
		and pbe.code = Code
	post 
		self.CurrentPBE.ballot = pbe.ballot
		and self.CurrentPBE.voters = pbe.voters;
	public RegisterVote: Voter * Candidate ==> ()
	RegisterVote(v,c) == (Memory:=Memory ++ {v|->c})
	pre c.name <> []
		and v.name <> []
	post true ---Memory = {v|->c} ++ Memory~ ;
   --ballot = {c} union ballot~; 

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end DRE