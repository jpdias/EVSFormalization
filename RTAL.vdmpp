class RTAL
instance variables
	public static record: map Candidate to nat := {|->};
	protected static voters: set of Voter := {};
	public static memory: map nat to RTAL := {|->};
	public static state: VoteState :=  new VoteState();
	public static iteration: nat := 0;
	protected static currentV : Voter := new Voter();
	protected static currentC : Candidate := new Candidate();
operations
	public Do : RTAL ==> ()
	Do(temp) == is subclass responsibility;
end RTAL

class RTALBuild is subclass of RTAL
operations
	public RTALBuild: map Candidate to nat * set of Voter ==> RTALBuild
	RTALBuild(rec,vots) == (record := rec; 
										 voters := vots;
									   return self)
	pre card dom rec <> 0 
			and vots <> {}
	post record = rec
			and voters = vots;
			
	public Do: RTAL ==>()
	Do(rt) == (iteration:= iteration+1;
						 memory := memory ++ {iteration |-> rt})
	pre iteration >= 0
	post card dom memory =  card dom memory~+1;
end RTALBuild